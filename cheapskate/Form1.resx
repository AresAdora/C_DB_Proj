<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>